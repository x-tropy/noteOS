.border-light {
    @apply border-opacity-25 border-black;
}
#tiptap-editor .ProseMirror, .article {
    @apply font-serif focus:outline-none mx-auto my-0 px-3 md:w-[750px];

    strong, h1, h2, h3 {
        @apply font-semibold;
    }

    h1, h2, h3 {
        @apply font-sans;
    }

    h1 {
        @apply text-4xl mt-10 mb-12;
    }

    h2 {
        @apply text-2xl mb-5 mt-12;
    }

    h3 {
        @apply text-xl leading-9 mt-5;
    }

    h1 code, h2 code, h3 code {
        @apply tracking-tight px-1 text-[0.9em];
        word-spacing: -4px;
    }

    p {
        @apply font-serif font-normal text-xl tracking-tight leading-8 my-4;
        word-spacing: 1px;

        code {
            @apply text-base tracking-tight text-fuchsia-600 font-medium rounded-md px-[2px];
            word-spacing: -4px;
        }

        strong {
            @apply font-semibold;
        }
    }

    h2 + p, h3 + p {
        @apply mt-0;
    }

    blockquote {
        p {
            @apply text-2xl leading-loose text-center text-gray-500 m-14 relative;

            &::before {
                @apply text-gray-300 absolute -ml-14 -mt-10 text-9xl;
                content: "â€œ";
            }
        }
    }

    .code-block-wrap {
        @apply mb-4;
    }

    pre {
        @apply text-sm rounded-md border border-light pl-2 pb-2 pt-9;

        code {
            @apply bg-transparent overflow-x-auto !p-0;
        }

    }

    .code-language-label {
        &::before {
            content: '';
            background: url("../images/code-invert.svg");
            @apply inline-block w-[18px] h-[18px] relative mr-[2px] top-[1px];
        }
    }

    ul, ol {
        @apply list-outside;
    }

    & > ul, & > ol {
        @apply ml-6;
    }

    ol ol, ol ul, ul ol, ul ul {
        @apply pl-6;
    }

    ol {
        @apply list-decimal;
    }

    ul {
        @apply list-disc;
    }

    li {
        @apply leading-none text-xl;

        p {
            @apply my-0;
        }
    }

    ul li {
        @apply marker:text-lg;
    }

    p:has(+ol), p:has(+ul) {
        @apply mb-0;
    }

    hr {
        @apply border-light border-t my-12;
    }

    a {
        @apply cursor-pointer underline underline-offset-[5px];

        &::after {
            @apply inline-block w-[18px] h-[18px] relative bottom-[2px] ml-[2px];
        }

        &.external::after {
            content: '';
            background: url('../images/external-link.svg');
        }

        &.internal::after {
            content: '';
            background: url('../images/file-text.svg');
        }
    }

    /* selected node */
    .ProseMirror-selectednode {
        @apply shadow-lg shadow-neutral-400 transition-all ring-1;
    }
}
